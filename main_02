import pygame
import sys

preto = (0, 0, 0)
branco = (200, 200, 200)
azul = (0, 0, 200)
vermelho = (200, 0, 0)
laranja = (255, 165, 0)

LARGURA = 1500
ALTURA = 800
tela = pygame.display.set_mode((LARGURA, ALTURA))
pygame.display.set_caption("CINg-Pong")

pygame.init()
class TelaInicial:
    def init(self, tela):
        self.tela = tela
        self.largura = LARGURA
        self.altura = ALTURA
        self.imagem = pygame.image.load("imagem.png")

        self.botao_sair = pygame.Rect(self.largura // 2 - 100, self.altura // 2 + 20, 200, 50)
        self.botao_jogar = pygame.Rect(self.largura // 2 - 100, self.altura // 2 - 50, 200, 50)
        self.botao_singleplayer = pygame.Rect(self.largura // 2 - 100, self.altura // 2 - 80, 200, 50)
        self.botao_multiplayer = pygame.Rect(self.largura // 2 - 100, self.altura // 2 - 10, 200, 50)
        self.botao_voltar = pygame.Rect(self.largura // 2 - 100, self.altura // 2 + 60, 200, 50)

        self.tela_atual = "principal"

    def desenhar_botao(self, cor, rect, texto):
        pygame.draw.rect(self.tela, cor, rect)
        fonte = pygame.font.SysFont(None, 35)
        texto_renderizado = fonte.render(texto, True, (255, 255, 255))
        texto_rect = texto_renderizado.get_rect(center=rect.center)
        self.tela.blit(texto_renderizado, texto_rect)

    def desenhar_tela_principal(self):
        self.tela.fill(preto)
        self.tela.blit(self.imagem, (self.largura // 2 - 200, self.altura // 2 - 200))
        self.desenhar_botao(vermelho, self.botao_sair, "SAIR")
        self.desenhar_botao(azul, self.botao_jogar, "JOGAR")

    def desenhar_tela_secundaria(self):
        self.tela.fill(preto)
        self.tela.blit(self.imagem, (self.largura // 2 - 200, self.altura // 2 - 200))
        self.desenhar_botao(azul, self.botao_singleplayer, "SINGLEPLAYER")
        self.desenhar_botao(azul, self.botao_multiplayer, "MULTIPLAYER")
        self.desenhar_botao(vermelho, self.botao_voltar, "VOLTAR")

    def atualizar_tela_inicial(self):
        while True:
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    pygame.quit()
                    sys.exit()
                if event.type == pygame.MOUSEBUTTONDOWN:
                    if self.tela_atual == 'principal':
                        if self.botao_sair.collidepoint(event.pos):
                            pygame.quit()
                            sys.exit()
                        elif self.botao_jogar.collidepoint(event.pos):
                            self.tela_atual = 'secundaria'
                    elif self.tela_atual == 'secundaria':
                        if self.botao_voltar.collidepoint(event.pos):
                            self.tela_atual = 'principal'
                        elif self.botao_singleplayer.collidepoint(event.pos):
                            return 'jogo_singleplayer'
                        elif self.botao_multiplayer.collidepoint(event.pos):
                            return 'jogo_multiplayer'

            if self.tela_atual == "principal":
                self.desenhar_tela_principal()
            elif self.tela_atual == "secundaria":
                self.desenhar_tela_secundaria()

            pygame.display.flip()

class Placar:
    def init(self, tela):
        self.tela = tela
        self.fonte = pygame.font.SysFont(None, 80)
        self.pontuacao_1 = 0
        self.pontuacao_2 = 0
    
    def atualizar_pontuacao(self, jogador):
        if jogador == 1:
            self.pontuacao_1 += 1
        elif jogador == 2:
            self.pontuacao_2 += 1
    
    def criar_placar(self):
        texto = f"{self.pontuacao_1} - {self.pontuacao_2}"
        texto_renderizado = self.fonte.render(texto, True, branco)
        texto_rect = texto_renderizado.get_rect(center = (LARGURA // 2, 50))
        self.tela.blit(texto_renderizado, texto_rect)

    def score_check(self):
        if self.pontuacao_1 == 11:
            return 1
        elif self.pontuacao_2 == 11:
            return 2


class TelaJogo:
    def init(self, tela):
        self.tela = tela
        self.largura = LARGURA
        self.altura = ALTURA
        self.relogio = pygame.time.Clock()

    def draw_mesa(self):
        pygame.draw.rect(self.tela, (0, 0, 170), (150, 100, 1200, 600))
        pygame.draw.line(self.tela, (255, 255, 255), (150, 100), (150, 700), 5)
        pygame.draw.line(self.tela, (255, 255, 255), (150, 100), (1350, 100), 5)
        pygame.draw.line(self.tela, (255, 255, 255), (150, 700), (1350, 700), 5)
        pygame.draw.line(self.tela, (255, 255, 255), (1350, 100), (1350, 700), 5)
        pygame.draw.line(self.tela, (200, 200, 200), (748, 100), (748, 700), 7)
        pygame.draw.line(self.tela, (255, 255, 255), (152, 400), (742, 400), 3)
        pygame.draw.line(self.tela, (255, 255, 255), (753, 400), (1348, 400), 3)

class Bola:
    def init(self, tela, cor, pos_x, pos_y, raio, direcao):
        self.tela = tela
        self.cor = cor
        self.pos_x = pos_x
        self.pos_y = pos_y
        self.raio = raio
        self.direcao_x = direcao
        self.direcao_y = direcao

    def draw(self):
        self.bola = pygame.draw.circle(self.tela, self.cor, (self.pos_x, self.pos_y), self.raio)

    def movimento(self):
        self.pos_x += self.direcao_x
        self.pos_y += self.direcao_y

        if self.pos_y >= ALTURA - self.raio or self.pos_y <= self.raio:
            self.direcao_y *= -1

    def colisao(self, colisor):
        bola_rect = pygame.Rect(self.pos_x - self.raio, self.pos_y - self.raio, self.raio * 2, self.raio * 2)
        if bola_rect.colliderect(colisor):
            if self.pos_x < LARGURA / 2:
                self.direcao_x = 5
            else:
                self.direcao_x = -5

    def reinicio(self):
        if self.pos_x < 0:
            self.pos_x = LARGURA / 2
            self.direcao_x = 5
            return 'blue'
        
        if self.pos_x > LARGURA:
            self.pos_x = LARGURA / 2
            self.direcao_x = -5
            return 'red'
        
        return None

class Player:
    def init(self, tela, cor, pos_x, pos_y, largura, altura):
        self.tela = tela
        self.cor = cor
        self.pos_x = pos_x
        self.pos_y = pos_y
        self.largura = largura
        self.altura = altura

    def draw(self):
        self.player = pygame.draw.rect(self.tela, self.cor, (self.pos_x, self.pos_y, self.largura, self.altura))
    
    def movimento(self, tecla_up, tecla_down):
        keys = pygame.key.get_pressed()
        if keys[tecla_up] and self.pos_y > 0:
            self.pos_y -= 5
        if keys[tecla_down] and self.pos_y + self.altura < ALTURA:
            self.pos_y += 5

    def movimento_bot(self, pos_y_bola):
        if self.pos_y > 0 and self.pos_y < ALTURA - self.altura:
            self.pos_y = pos_y_bola - self.altura / 2

class Tela_da_Vitoria:
    def init(self, tela, vencedor):
        self.tela = tela
        self.vencedor = vencedor
        self.fonte = pygame.font.SysFont(None, 100)

    def draw(self):
        self.tela.fill(preto)
        linha_1 = (f"PLAYER {self.vencedor}")
        if self.vencedor == 1:
            texto_renderizado = self.fonte.render(linha_1, True, (0, 0, 200))
        elif self.vencedor == 2:
            texto_renderizado = self.fonte.render(linha_1, True, (200, 0, 0))
        texto_rect = texto_renderizado.get_rect(center=(LARGURA // 2, ALTURA // 2 - 100))
        self.tela.blit(texto_renderizado, texto_rect)
        linha_2 = ("GANHOU!")
        texto_renderizado = self.fonte.render(linha_2, True, branco)
        texto_rect = texto_renderizado.get_rect(center=(LARGURA // 2, ALTURA // 2))
        self.tela.blit(texto_renderizado, texto_rect)
        pygame.display.flip()
        pygame.time.wait(5000)


tela_inicial = TelaInicial(tela)


while True:
    estado = tela_inicial.atualizar_tela_inicial()
    
    if estado in ['jogo_singleplayer', 'jogo_multiplayer']:
        tela_jogo = TelaJogo(tela)
        placar = Placar(tela)
        bola = Bola(tela, branco, LARGURA / 2, ALTURA / 2, 10, 5)
        player_1 = Player(tela, azul, 90, ALTURA / 2, 20, 80)
        player_2 = Player(tela, vermelho, LARGURA - 110, ALTURA / 2, 20, 80)

        bot = estado == 'jogo_singleplayer'

        while True:
            tela_jogo.relogio.tick(60)
            tela.fill(preto)
            tela_jogo.draw_mesa()

            bola.draw()
            player_1.draw()
            player_2.draw()
            placar.criar_placar()

            bola.movimento()
            bola.colisao(pygame.Rect(player_1.pos_x, player_1.pos_y, player_1.largura, player_1.altura))
            bola.colisao(pygame.Rect(player_2.pos_x, player_2.pos_y, player_2.largura, player_2.altura))
            jogador_que_pontuou = bola.reinicio()

            if jogador_que_pontuou == "blue":
                placar.atualizar_pontuacao(1)
            elif jogador_que_pontuou == "red":
                placar.atualizar_pontuacao(2)
            
            vencedor = placar.score_check()
            if vencedor:
                tela_vitoria = Tela_da_Vitoria(tela, vencedor)
                tela_vitoria.draw()
                break

            if bot:
                if player_2.pos_y < bola.pos_y:
                    player_2.pos_y += 5
                if player_2.pos_y > bola.pos_y - player_2.altura:
                    player_2.pos_y -= 5

            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    pygame.quit()
                    sys.exit()
                    
            player_1.movimento(pygame.K_w, pygame.K_s)
            player_2.movimento(pygame.K_UP, pygame.K_DOWN)

            pygame.display.flip()
