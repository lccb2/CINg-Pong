import pygame
import random

# Inicializa o Pygame
pygame.init()
screen = pygame.display.set_mode((800, 600))
clock = pygame.time.Clock()
running = True
dt = 0

# Carrega as imagens dos colecionáveis e redimensiona
imagem1 = pygame.image.load('imagem1.png')
imagem2 = pygame.image.load('imagem2.png')
imagem3 = pygame.image.load('imagem3.png')
imagem4 = pygame.image.load('imagem4.png')
imagem1 = pygame.transform.scale(imagem1, (30, 30))
imagem2 = pygame.transform.scale(imagem2, (30, 30))
imagem3 = pygame.transform.scale(imagem3, (30, 30))
imagem4 = pygame.transform.scale(imagem4, (30, 30))

# Lista de imagens dos colecionáveis
imagens_coletaveis = [imagem1, imagem2, imagem3, imagem4]

# Classe para os Objetos Coletáveis
class Coletaveis:
    def __init__(self, x, y, image):
        self.position = pygame.Vector2(x, y)
        self.image = image
        self.rect = self.image.get_rect(center=(x, y))
    
    def draw(self, screen):
        screen.blit(self.image, self.rect.topleft)

# Função para criar um colecionável em uma posição aleatória na coluna especificada
def aparicao_aleatoria_coletavel_na_coluna(imagens, coluna_x):
    y = random.randint(0, screen.get_height() - imagens[0].get_height())
    imagem_aleatoria = random.choice(imagens)
    return Coletaveis(coluna_x, y, imagem_aleatoria)

# Lista de Colecionáveis
coletaveis = []

# Variável para controlar o tempo de aparecimento dos colecionáveis
tempo_para_proximo_coletavel = 0
intervalo_entre_coletaveis = 2  # Tempo em segundos entre a aparição de novos colecionáveis
coluna_x = 100  # Posição X fixa para a coluna onde os objetos aparecerão

# Loop principal do jogo
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    # Atualiza o temporizador
    tempo_para_proximo_coletavel -= dt
    if tempo_para_proximo_coletavel <= 0:
        # Adiciona um novo coletável aleatoriamente na coluna especificada
        coletaveis.append(aparicao_aleatoria_coletavel_na_coluna(imagens_coletaveis, coluna_x))
        tempo_para_proximo_coletavel = intervalo_entre_coletaveis

    # Limpa a tela
    screen.fill((0, 0, 0))  
    
    # Desenha os colecionáveis
    for collectible in coletaveis[:]:
        collectible.draw(screen)

    # Atualiza a tela
    pygame.display.flip()

    # Controla a taxa de quadros
    dt = clock.tick(60) / 1000

pygame.quit()
